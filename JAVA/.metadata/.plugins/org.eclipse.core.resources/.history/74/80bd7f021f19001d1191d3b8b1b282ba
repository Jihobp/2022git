
class Ax{
	//멤버 변수 선언부
	private int a;
	private int b;
	private double n1;
	private double n2;
	
	// 생성자 선언부
	// 오버로딩: 매개변수의 수와 타입이 다르면 같은 이름의 함수도 함께 사용할 수 있다.
	// 다만 반환형만 다르면 오버로딩이 불가능하다.
	public Ax() {		// 매개변수가 없음, int형 덧셈을 사용할거라 가정
		this.a=1;
		this.b=2;
	}
	public Ax(int a, int b) {	// int형 매개변수가 있음
		this.a=a;
		this.b=b;
	}
	public Ax(double a, double b) {	//double형 매개변수가 있음
		this.n1=a;
		this.n2=b;
	}
	
	// 멤버 함수 선언부
	public int getA() {return this.a;}
	public int getB() {return this.b;}
	public double getN1() {return this.n1;}
	public double getN2() {return this.n2;}
	
	// 생성자 오버로딩과 비슷한 방식으로 진행하면 됨
	// int형을 반환하는 덧셈 함수 구현
	public int sum(int a, int b) {
		return a+b;
	}
	// double형을 반환하는 덧셈 함수 구현
	public double sum(double a, double b) {
		return a+b;
	}
}

public class nothing {
	public static void main(String argsp[]) {
		// 객체 배열
		// int i[]=new int[3];
		Ax s[]=new Ax[3];	// 배열만 선언, 객체 생성은 아직 안함
		s[0]=new Ax();
		s[1]=new Ax(3,5);
		s[2]=new Ax(1.1, 7.7);
		s[0].getA();
	}
}
