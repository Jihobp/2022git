import java.util.Scanner; //백준3번 #11948번 //scan 기능 쓰는데 필요하다.  

public class BaekJoon_Q3 { // 공공 클래스 클래스명 //선언
	public static void main(String args[]) { //공공 스태틱 공허 메인(문자열 args[]) args//문자열을 배열로 사용하겠다.
									//공공의 정적변수 공허 메인 (문자열 배열[])//메인에서 문자열을 매개변수로 사용할 수 있다.
									//string args > 먼가를 입력받을 수 있다.
		Scanner s=new Scanner(System.in); //변수명: s입니다!!! Scanner를 s로 줄엿다.
		//함수=기능들을 출력하게 해주는 Scanner. 
		//JOI는 물리, 화학, 생물, 지구과학, 역사, 지리 총 6 과목의 시험을 봤다. 각 시험의 만점은 100점이다.
		//JOI는 물리, 화학, 생물, 지구과학 4과목 중에서 3 과목을 선택하고 역사, 지리 2 과목 중에서 한 과목을 선택한다.
		//시험 점수의 합이 가장 높게 나오도록 과목을 선택할 때, JOI가 선택한 과목의 시험 점수의 합을 구하시오.
		//--------------------------------------------------------------------------------------------
		
		
	
		int num[]=new int[6];//6개짜리 배열 변수를 선언한다.
		for(int i=0; i<6; i++)//변수 6개를 반복문으로 입력받는다. 
			num[i]=s.nextInt();//scanner.nextInt입력받는다.
		
		int a=0, b=0, c=0, d=0; //변수 4개를 0으로 초기화한다. //temp를 미리 만들어 넣는단 느낌으로 ㅇㅅㅇ!!!
		
		for(int i=0; i<4;i++) {//반복문으로 앞에 나온 4개를 비교한다.
			if(a<num[i]){ //num[i]번째가 a보다 크면, 1,2,4,3,5,6 //버블정렬 하나씩 넘겨주기 >> 1
				c=b; //c=0
				b=a; //b=1
				a=num[i];} //a=2            
				//첫번째바퀴 a=1,b=0,c=0,d=0 >>>  두번쨰바퀴 a=2,b=1,c=0,d=0, >>>세번째바퀴 num[i]=4, a=2, c=1,b=2,a=4//
				//네번째바퀴 num[i]=3, 거짓 !!!!!!!!!!!!!!! 실행안해!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
				//다시 3을 넣어줄려면..? 
		else if(b<num[i]){
			c=b; //a는 높은값이라 필요없다.
			b=num[i];}
		else if(c<num[i]) { //else 써도댄댜 F 알기!!!!!!!!!!!!!!!!
			c=num[i]; // 큰 a만 뽑고 나머지는 안뽑아서 뽑아줘야함 ㅇㅅㅇ
			}
		}
		//이번에 입력한 값을 비교하여 위치에 맞게 넣어준다.
			
		for(int i=0;i<1;i++) {	//변수 2개를 비교하여 높은 수를 네번째 변수에 넣는다.
		if(num[4]>num[5])
			d=num[4];
		else if(num[5]>num[4])
			d=num[5];
		}
		
		System.out.println(a+b+c+d); //f.//모든 변수를 더해서 합을 출력한다.
	}
}

//int sum,temp=s.nextInt(); //s.nextINt??? sum 변수선언, temp 변수값 입력받는다. 
//
//	int num[]=new int[temp]; // ???? 전체 과목수 6개를 받아야 하나 말아야 하나>?!!!!?!
//	
//	for(int i=0; i<6;i++) //6과목 아니겠지? 4과목을 체크한다. 
//		for(int j=0;j<4;j++)
//		{
//			if(num[i]>num[j]) 
//			{
//				temp=num[j];
//						num[j]=num[i];
//								num[i]=temp;
//								
//								continue;
//			}
//		}	
//	//sum +=num[i];//쓸거면 sum을 0으로 초기화
//		
//	for(int k=0;k<1;k++) {	
//		if(num[4]>num[5]){
//				sum+=num[4];}
//		else(num[5]>num[4]){
//				sum+=num[5];
//						}
//	}		
//

//배열 총 두개
	//크기가 4, 크기가 2,
	//뒤에서 뽑으면 젤 


//	System.out.println(+sum); //f.
//  마지막에 4과목 다더해서 출력

//1. 배열로 풀기. 최솟값이용>https://comain.tistory.com/34  2. for로 풀기. >> 가장 작은 값 빼기?
//JAVA를 어느정도 공부하다보면 예외처리 오류를 해줘야 한다는 구문을 많이 만날 수 있었다.
// - throws IOException 구문 그대로 해석을 해 보면, [입출력 예외를 던진다] 입니다.
// 자바에서는 런타임시에 발생할 수 있는 여러가지 예외들을 처리하는 별도의 메카니즘을 가지고 있습니다.
// throws 키워드는 실행시간에예외가 발생했을 경우 해당 예외를 직접처리하지 않고 다른 곳에서 처리하도록 예외를 던지겠다 라는 의미입니다.
// https://www.lanian.co.kr/entry/throws-IOException
// https://go-coding.tistory.com/10
