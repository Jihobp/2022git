package sample.spring.yse;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

/*
 * 4.1. 책 입력 화면 개요
책 정보를 입력하기 위한 화면을 만든다. 브라우저에서 /create 주소에 접속하면 책 정보를 입력할 수 있는 화면을 보여준다.
4.2. 책 컨트롤러 클래스 생성
브라우저를 비롯한 클라이언트(client)의 요청(request)을 받아서 응답(response)을 만들어내는 컨트롤러(controller) 클래스를 만든다.
참고로 @Controller 네임스페이스는 아래와 같다.

*/

//f2누르고 두번째 changeto controller
@Controller
public class BookController{
	
	/*6.10. 책 입력 기능 컨트롤러 서비스 빈 추가
	책 입력 기능 서비스를 호출하기 위해 서비스 빈을 추가한다. 클래스 선언 public class BookController { 바로 아래에 추가하면 된다.src/main/java/sample/spring/yse/BookController.java
	@Autowired
	BookService bookService;
	서비스를 호출하기 위해 BookService를 의존성을 주입한다. 이 때 BookService 인터페이스가 사용되었음을 주의하자.
	*/
	@Autowired
	BookService bookService;
	
//	4.3. 책 생성 화면 컨트롤러 메소드 작성
//	브라우저 주소가 /create일 때 실행되는 자바 컨트롤러 메소드를 작성한다. 
//	아래 코드를 BookController 클래스에 추가한다.
//	create 메소드는 브라우저에서 /create 주소가 GET방식으로 입력되었을 때 book/create 경로의 뷰를 보여준다.
	@RequestMapping(value="/create", method = RequestMethod.GET)
	public ModelAndView create() {
		return new ModelAndView("book/create");
	}
	
	//6.11. 책 입력 기능 컨트롤러 메소드 추가 :서비스를 이용해 책을 입력하는 컨트롤러 메소드를 만든다.
	@RequestMapping(value="/create", method = RequestMethod.POST)
	public ModelAndView createPost(@RequestParam Map<String, Object> map) {
		ModelAndView mav = new ModelAndView();
		String bookId = this.bookService.create(map);
		if(bookId == null) {
			mav.setViewName("redirect:/create");
		}else {
			mav.setViewName("redirect:/detail?bookId"+bookId);
		}
		return mav;
	}
}
