package com.lecspring.myspring;
/*6.4. 책 DAO 클래스 생성
매퍼 XML을 실행시키는 DAO(Data Access Object) 클래스를 생성한다. src/main/java 하위 항목 sample.spring.yse 패키지를 우클릭해서 BookDao 클래스를 만들면 된다.
클래스 생성 후 아래 코드를 입력한다.
 * */	
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import sample.spring.yse.RequestParam;


/*
 * BookDao를 bean으로 종속함
 * DB연결 관련된 Bean 객체 = @Repository*/

@Repository
public class BookDao {

		//bean 객체를 생성하는데, 적절한 인스턴스를 행성해줌(자동)
		//new 키워드 없어도 자동으로 만들어줌
	@Autowired
	SqlSession sqlSessionTemplate;
	//mapper(=book_SQL.xml)에 있는 id가 insert인 
	//쿼리를 수행함.
	
	/*6.5. 책 입력 기능 DAO 메소드 생성 ::: 책 데이터 입력 쿼리를 실행하는 DAO 메소드를 만든다.*/
	public int insert(Map<String, Object>map) {
		return this.sqlSessionTemplate.insert
				("book.insert",map);
	}
	
	public Map<String, Object> selectDetail
	(Map<String, Object>map){
		return this.sqlSessionTemplate.selectOne("book.slect_detail",map);
	}
	
	@RequestMapping(value="/detail",
			method=RequestMethod.GET)
	public ModelAndView detail
	(@RequestParam Map<String,Object> map) {
		Map<String,Object> detailMap = 
				this.bookService.detail(map);
		ModelAndView mav = new ModelAndView();
		mav.addObject("data", detailMap);
		String bookId = map.get("bookId").toString();
		mav.addObject("bookId",bookId);
		mav.setViewName("/book/detail");
		return mav;
	}
}
